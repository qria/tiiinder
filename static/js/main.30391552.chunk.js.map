{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["words","word","answer","commentary","App","useState","setDirections","onCardLeftScreen","direction","directions","className","map","character","preventSwipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAYMA,EAAQ,CACZ,CACEC,KAAM,OACNC,OAAQ,OACRC,WAAY,qHAEd,CACEF,KAAM,YACNC,OAAQ,QACRC,WAAY,sDAEd,CACEF,KAAM,UACNC,OAAQ,QACRC,WAAY,4DAEd,CACEF,KAAM,SACNC,OAAQ,QACRC,WAAY,qDAEd,CACEF,KAAM,QACNC,OAAQ,OACRC,WAAY,+CAEd,CACEF,KAAM,UACNC,OAAQ,QACRC,WAAY,sDAEd,CACEF,KAAM,aACNC,OAAQ,OACRC,WAAY,2FAEd,CACEF,KAAM,SACNC,OAAQ,QACRC,WAAY,sDAEd,CACEF,KAAM,UACNC,OAAQ,OACRC,WAAY,4FAEd,CACEF,KAAM,WACNC,OAAQ,OACRC,WAAY,uDAkCDC,MA9Bf,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAEMC,GAFN,WAIPC,EAAmB,SAACC,GACxBF,GAAc,SAAAG,GAAU,4BAAQA,GAAR,CAAoBD,QAE9C,OACE,sBAAKE,UAAU,MAAf,UAEE,0CACA,qBAAKA,UAAU,gBAAf,SAEGV,EAAMW,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CACEF,UAAU,QAEVH,iBAAkBA,EAClBM,aAAc,CAAC,KAAM,QAJvB,SAME,qBAAKH,UAAU,OAAf,SACE,6BAAKE,EAAUX,UALZW,EAAUX,eCrEZa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30391552.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css';\r\nimport TinderCard from 'react-tinder-card';\r\n\r\n\r\n// more candidates\r\n// dainty - 귀엽고 깜찍하다\r\n// dolor - 고통\r\n// blight - 병충해\r\n// noisome - 악취\r\n\r\n// Currently assumes questions are shown in the order in this list.\r\nconst words = [\r\n  {\r\n    word: 'jilt',\r\n    answer: 'left',\r\n    commentary: '애인을 가지고 놀다가 차버리는 것을 좋아하',\r\n  },\r\n  {\r\n    word: 'rectitude',\r\n    answer: 'right',\r\n    commentary: '청렴한 것을 싫어하',\r\n  },\r\n  {\r\n    word: 'erudite',\r\n    answer: 'right',\r\n    commentary: '박식한 사람을 싫어하',\r\n  },\r\n  {\r\n    word: 'pundit',\r\n    answer: 'right',\r\n    commentary: '전문가들을 싫어하',\r\n  },\r\n  {\r\n    word: 'libel',\r\n    answer: 'left',\r\n    commentary: '명예훼손을 즐기',\r\n  },\r\n  {\r\n    word: 'cordial',\r\n    answer: 'right',\r\n    commentary: '다정한 것을 싫어하',\r\n  },\r\n  {\r\n    word: 'philistine',\r\n    answer: 'left',\r\n    commentary: '교양없고 속물적인 사람을 좋아하',\r\n  },\r\n  {\r\n    word: 'candor',\r\n    answer: 'right',\r\n    commentary: '정직한 것을 싫어하',\r\n  },\r\n  {\r\n    word: 'upbraid',\r\n    answer: 'left',\r\n    commentary: '남의 잘못을 비난하는 것을 좋아하',\r\n  },\r\n  {\r\n    word: 'progidal',\r\n    answer: 'left',\r\n    commentary: '방탕한 것을 좋아하',\r\n  },\r\n]\r\n\r\nfunction App() {\r\n  \r\n  const [directions, setDirections] = useState([])\r\n\r\n  const onCardLeftScreen = (direction) => {\r\n    setDirections(directions => [...directions, direction])\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <h1>Tiiinder</h1>\r\n      <div className='cardContainer'>\r\n        \r\n        {words.map((character) =>\r\n          <TinderCard \r\n            className='swipe' \r\n            key={character.word} \r\n            onCardLeftScreen={onCardLeftScreen}\r\n            preventSwipe={['up', 'down']}  \r\n          >\r\n            <div className='card'>\r\n              <h3>{character.word}</h3>\r\n            </div>\r\n          </TinderCard>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}