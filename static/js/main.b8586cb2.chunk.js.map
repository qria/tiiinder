{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["words","word","answer","commentary","App","useState","directions","setDirections","guideShown","setGuideShown","endShown","length","commentaries","i","push","useEffect","setTimeout","onCardLeftScreen","direction","className","map","preventSwipe","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAYMA,EAAQ,CACZ,CACEC,KAAM,OACNC,OAAQ,OACRC,WAAY,qHAEd,CACEF,KAAM,YACNC,OAAQ,QACRC,WAAY,sDAEd,CACEF,KAAM,UACNC,OAAQ,QACRC,WAAY,4DAEd,CACEF,KAAM,SACNC,OAAQ,QACRC,WAAY,qDAEd,CACEF,KAAM,QACNC,OAAQ,OACRC,WAAY,+CAEd,CACEF,KAAM,UACNC,OAAQ,QACRC,WAAY,sDAEd,CACEF,KAAM,aACNC,OAAQ,OACRC,WAAY,2FAEd,CACEF,KAAM,SACNC,OAAQ,QACRC,WAAY,sDAEd,CACEF,KAAM,UACNC,OAAQ,OACRC,WAAY,4FAEd,CACEF,KAAM,WACNC,OAAQ,OACRC,WAAY,uDAiFDC,MA7Ef,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAENC,EAFM,KAEMC,EAFN,OAGuBF,oBAAS,GAHhC,mBAGNG,EAHM,KAGMC,EAHN,KAIPC,EAAWJ,EAAWK,SAAWX,EAAMW,OAEvCC,EAAe,GACrB,IAAI,IAAMC,KAAKP,EACTA,EAAWO,KAAOb,EAAMa,GAAGX,QAC7BU,EAAaE,KAAKd,EAAMa,GAAGV,YAI/BY,qBAAU,kBAAMC,YAAW,kBAAMP,GAAc,KAAO,MAAK,IAE3D,IAAMQ,EAAmB,SAACC,GACxBX,GAAc,SAAAD,GAAU,4BAAQA,GAAR,CAAoBY,QAE9C,OACE,sBAAKC,UAAU,MAAf,UAEE,0CACA,qBAAKA,UAAU,gBAAf,SAEGnB,EAAMoB,KAAI,SAACnB,GAAD,OACT,cAAC,IAAD,CACEkB,UAAU,QAEVF,iBAAkBA,EAClBI,aAAc,CAAC,KAAM,QAJvB,SAME,qBAAKF,UAAU,OAAf,SACE,6BAAKlB,EAAKA,UALPA,EAAKA,WAWhB,qBAAKkB,UAAW,SAAWX,EAAa,QAAU,IAAlD,SAEE,sBAAKW,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,4CAEF,sBAAKA,UAAU,aAAf,UACE,kFACA,uKAEF,qBAAKA,UAAU,eAAf,SACE,oBAAIG,QAAS,kBAAMb,GAAc,IAAjC,0BAKN,qBAAKU,UAAW,SAAWT,EAAW,QAAU,IAAhD,SAEE,sBAAKS,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,gDAEF,sBAAKA,UAAU,aAAf,UAEE,sDACCP,EAAaQ,KAAI,SAACjB,GACf,OAAQ,8BAAIA,EAAJ,eAEZ,kFAEF,qBAAKgB,UAAU,eAAf,SACE,qEC1HGI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b8586cb2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport TinderCard from 'react-tinder-card';\n\n\n// more candidates\n// dainty - 귀엽고 깜찍하다\n// dolor - 고통\n// blight - 병충해\n// noisome - 악취\n\n// Currently assumes questions are shown in the order in this list.\nconst words = [\n  {\n    word: 'jilt',\n    answer: 'left',\n    commentary: '애인을 가지고 놀다가 차버리는 것을 좋아하',\n  },\n  {\n    word: 'rectitude',\n    answer: 'right',\n    commentary: '청렴한 것을 싫어하',\n  },\n  {\n    word: 'erudite',\n    answer: 'right',\n    commentary: '박식한 사람을 싫어하',\n  },\n  {\n    word: 'pundit',\n    answer: 'right',\n    commentary: '전문가들을 싫어하',\n  },\n  {\n    word: 'libel',\n    answer: 'left',\n    commentary: '명예훼손을 즐기',\n  },\n  {\n    word: 'cordial',\n    answer: 'right',\n    commentary: '다정한 것을 싫어하',\n  },\n  {\n    word: 'philistine',\n    answer: 'left',\n    commentary: '교양없고 속물적인 사람을 좋아하',\n  },\n  {\n    word: 'candor',\n    answer: 'right',\n    commentary: '정직한 것을 싫어하',\n  },\n  {\n    word: 'upbraid',\n    answer: 'left',\n    commentary: '남의 잘못을 비난하는 것을 좋아하',\n  },\n  {\n    word: 'progidal',\n    answer: 'left',\n    commentary: '방탕한 것을 좋아하',\n  },\n]\n\nfunction App() {\n\n  const [directions, setDirections] = useState([])\n  const [guideShown, setGuideShown] = useState(false)\n  const endShown = directions.length === words.length\n\n  const commentaries = []\n  for(const i in directions){\n    if (directions[i] !== words[i].answer){\n      commentaries.push(words[i].commentary)\n    }\n  }\n\n  useEffect(() => setTimeout(() => setGuideShown(true), 50), [])\n\n  const onCardLeftScreen = (direction) => {\n    setDirections(directions => [...directions, direction])\n  }\n  return (\n    <div className=\"App\">\n\n      <h1>Tiiinder</h1>\n      <div className='cardContainer'>\n\n        {words.map((word) =>\n          <TinderCard\n            className='swipe'\n            key={word.word}\n            onCardLeftScreen={onCardLeftScreen}\n            preventSwipe={['up', 'down']}\n          >\n            <div className='card'>\n              <h3>{word.word}</h3>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n\n      <div className={\"modal\" + (guideShown ? \" show\" : \"\")}>\n\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h2>Tiiinder</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p>주어진 영어단어에</p>\n            <p>좋으면 오른쪽, 안좋으면 왼쪽으로 스와이프하세요</p>\n          </div>\n          <div className=\"modal-footer\">\n            <h3 onClick={() => setGuideShown(false)}>Start</h3>\n          </div>\n        </div>\n      </div>\n\n      <div className={\"modal\" + (endShown ? \" show\" : \"\")}>\n\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h2>결과</h2>\n          </div>\n          <div className=\"modal-body\">\n\n            <p>당신은...</p>\n            {commentaries.map((commentary) => {\n                return (<p>{commentary}고</p>);\n            })}\n            <p>하는 사람이군요...</p>\n          </div>\n          <div className=\"modal-footer\">\n            <h3>다시하기</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}